{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  createContext,\n  useEffect,\n  useRef,\n  useReducer,\n  useContext,\n  useCallback,\n  Reducer,\n  Context,\n} from 'react'\n\nimport { Store, Atom, Action } from '@reatom/core'\n\nfunction noop() {}\n\nexport const context = createContext<Store | null>(null)\n\nexport const { Provider } = context\n\nfunction useForceUpdate() {\n  // dispatch don't have action and don't changes between rerenders\n  return useReducer<Reducer<number, null>>(s => s + 1, 0)[1] as () => void\n}\n\nconst lifeCycleStatus = {\n  init: 'init',\n  upToDate: 'upToDate',\n  outOfDate: 'outOfDate',\n} as const\n\nconst defaultMapper = (atomValue: any) => atomValue\n\n/**\n * @param ctx react context for your store.\n * @returns A `useAtom` hook bound to the context.\n */\nexport function createAtomHook(ctx: Context<Store | null> = context) {\n  function useAtom<T>(atom: Atom<T>): T\n  function useAtom<TI, TO = TI>(\n    atom: Atom<TI>,\n    selector: (atomValue: TI) => TO,\n    deps: any[],\n  ): TO\n  function useAtom<TI, TO = TI>(\n    atom: Atom<TI>,\n    selector: (atomValue: TI) => TO = defaultMapper,\n    deps: any[] = [],\n  ): TO {\n    const forceUpdate = useForceUpdate()\n    const store = useContext(ctx)\n    if (!store) throw new Error('[reatom] The provider is not defined')\n\n    const { current: that } = useRef({\n      store,\n      atom: (undefined as any) as Atom<TI>,\n      selector,\n      deps,\n      atomValue: (undefined as any) as TI,\n      selectorValue: (undefined as any) as TO,\n      unsubscribe: noop,\n      mountStatus: lifeCycleStatus.init as keyof typeof lifeCycleStatus,\n    })\n    that.selector = selector\n\n    if (store !== that.store || atom !== that.atom) {\n      that.store = store\n      that.atom = atom\n      that.deps = deps\n      that.unsubscribe()\n      that.unsubscribe = store.subscribe(that.atom, (atomValue: any) => {\n        if (Object.is(that.atomValue, atomValue)) return\n        that.atomValue = atomValue\n\n        const selectorValue = that.selector(atomValue)\n        if (Object.is(selectorValue, that.selectorValue)) return\n        that.selectorValue = selectorValue\n\n        if (that.mountStatus === lifeCycleStatus.init) {\n          that.mountStatus = lifeCycleStatus.outOfDate\n        } else {\n          forceUpdate()\n        }\n      })\n      that.atomValue = that.store.getState(atom)\n      that.selectorValue = that.selector(that.atomValue)\n    } else {\n      const atomValue = that.store.getState(that.atom)\n      if (\n        !Object.is(atomValue, that.atomValue) ||\n        deps.length !== that.deps.length ||\n        deps.some((d, i) => !Object.is(d, that.deps[i]))\n      ) {\n        that.deps = deps\n        that.atomValue = atomValue\n        that.selectorValue = that.selector(that.atomValue)\n      }\n    }\n\n    useEffect(() => {\n      if (that.mountStatus === lifeCycleStatus.outOfDate) {\n        that.mountStatus = lifeCycleStatus.upToDate\n        forceUpdate()\n      }\n      that.mountStatus = lifeCycleStatus.upToDate\n\n      return () => that.unsubscribe()\n    }, [])\n\n    return that.selectorValue as TO\n  }\n\n  return useAtom\n}\n\n/**\n * @param atom target atom for subscription\n * @param selector (optional)\n * @param deps (optional)\n * @returns atom value\n */\nexport const useAtom = createAtomHook()\n\ntype AnyActionCreator = (...args: any[]) => Action<any> | void\n\n/**\n * @param ctx react context for your store.\n * @returns A `useAction` hook bound to the context.\n */\nexport function createActionHook(ctx: Context<Store | null> = context) {\n  function useAction<AC extends AnyActionCreator>(\n    cb: AC,\n    deps?: any[],\n  ): (...args: Parameters<AC>) => void\n  function useAction(cb: () => Action<any> | void, deps?: any[]): () => void\n  function useAction<T>(\n    cb: (a: T) => Action<any> | void,\n    deps?: any[],\n  ): (payload: T) => void\n  function useAction(\n    cb: AnyActionCreator,\n    deps: any[] = [],\n  ): (...args: any[]) => void {\n    const store = useContext(ctx)\n\n    if (!store) throw new Error('[reatom] The provider is not defined')\n    if (typeof cb !== 'function') {\n      throw new TypeError('[reatom] `useAction` argument must be a function')\n    }\n\n    return useCallback((...args) => {\n      const action = cb(...args)\n      if (action) store.dispatch(action)\n    }, deps.concat(store))\n  }\n\n  return useAction\n}\n\n/**\n * @param cb actionCreator (may return void for preventing dispatch)\n * @param deps\n */\nexport const useAction = createActionHook()\n\n// TODO: TS tests\n\n// const a = declareAction()\n// const ap = declareAction<0>()\n// const aop = declareAction<{ a: string; b: number; c: boolean }>()\n\n// const test1 = useAction(a)\n// const test2 = useAction(() => a())\n// const test3 = useAction(ap)\n// const test4 = useAction(() => ap(0))\n// const test5 = useAction<0>((v) => ap(v))\n// const test6 = useAction<0>((v) => a())\n// const test7 = useAction(() => {\n//   if (Math.random()) {\n//     return ap(0)\n//   }\n//   if (Math.random()) {\n//     return a()\n//   }\n//   if (Math.random()) {\n//     // error\n//     return 123\n//   }\n// })\n// const test8 = useAction((a: string, b: number, c: boolean = false) => aop({ a, b, c }))\n"],"names":["noop","context","createContext","Provider","defaultMapper","atomValue","createAtomHook","ctx","atom","selector","deps","forceUpdate","useReducer","s","store","useContext","Error","that","useRef","undefined","selectorValue","unsubscribe","mountStatus","current","subscribe","Object","is","getState","length","some","d","i","useEffect","useAtom","createActionHook","cb","TypeError","useCallback","action","dispatch","concat","useAction"],"mappings":"uBAaA,SAASA,KAEIC,IAAAA,EAAUC,gBAA4B,MAEpCC,EAAaF,EAAbE,SAaTC,EAAgB,SAACC,UAAmBA,YAM1BC,EAAeC,GA2E7B,gBA3E6BA,IAAAA,EAA6BN,GAO1D,SACEO,EACAC,EACAC,YADAD,IAAAA,EAAkCL,YAClCM,IAAAA,EAAc,IAEd,IAAMC,EA3BDC,aAAkC,SAAAC,UAAKA,EAAI,GAAG,GAAG,GA4BhDC,EAAQC,aAAWR,GACzB,IAAKO,EAAO,UAAUE,MAAM,4CAEXC,EAASC,SAAO,CAC/BJ,MAAAA,EACAN,UAAOW,EACPV,SAAAA,EACAC,KAAAA,EACAL,eAAYc,EACZC,mBAAgBD,EAChBE,YAAarB,EACbsB,YAnCE,SA2BIC,QAYR,GAFAN,EAAKR,SAAWA,EAEZK,IAAUG,EAAKH,OAASN,IAASS,EAAKT,KACxCS,EAAKH,MAAQA,EACbG,EAAKT,KAAOA,EACZS,EAAKP,KAAOA,EACZO,EAAKI,cACLJ,EAAKI,YAAcP,EAAMU,UAAUP,EAAKT,KAAM,SAACH,GAC7C,IAAIoB,OAAOC,GAAGT,EAAKZ,UAAWA,GAA9B,CACAY,EAAKZ,UAAYA,EAEjB,IAAMe,EAAgBH,EAAKR,SAASJ,GAChCoB,OAAOC,GAAGN,EAAeH,EAAKG,iBAClCH,EAAKG,cAAgBA,EAlDrB,SAoDIH,EAAKK,YACPL,EAAKK,YAnDF,YAqDHX,QAGJM,EAAKZ,UAAYY,EAAKH,MAAMa,SAASnB,GACrCS,EAAKG,cAAgBH,EAAKR,SAASQ,EAAKZ,eACnC,CACL,IAAMA,EAAYY,EAAKH,MAAMa,SAASV,EAAKT,MAExCiB,OAAOC,GAAGrB,EAAWY,EAAKZ,YAC3BK,EAAKkB,SAAWX,EAAKP,KAAKkB,SAC1BlB,EAAKmB,KAAK,SAACC,EAAGC,UAAON,OAAOC,GAAGI,EAAGb,EAAKP,KAAKqB,QAE5Cd,EAAKP,KAAOA,EACZO,EAAKZ,UAAYA,EACjBY,EAAKG,cAAgBH,EAAKR,SAASQ,EAAKZ,YAc5C,OAVA2B,YAAU,WAOR,MA9EO,cAwEHf,EAAKK,cACPL,EAAKK,YA1ED,WA2EJX,KAEFM,EAAKK,YA7EC,6BA+EOL,EAAKI,gBACjB,IAEIJ,EAAKG,eAYHa,IAAAA,EAAU3B,aAQP4B,EAAiB3B,GA2B/B,gBA3B+BA,IAAAA,EAA6BN,GAU5D,SACEkC,EACAzB,YAAAA,IAAAA,EAAc,IAEd,IAAMI,EAAQC,aAAWR,GAEzB,IAAKO,EAAO,UAAUE,MAAM,wCAC5B,GAAkB,mBAAPmB,EACT,UAAUC,UAAU,oDAGtB,OAAOC,cAAY,WACjB,IAAMC,EAASH,yCACXG,GAAQxB,EAAMyB,SAASD,IAC1B5B,EAAK8B,OAAO1B,KAUN2B,IAAAA,EAAYP"}